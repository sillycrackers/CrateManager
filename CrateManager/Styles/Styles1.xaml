<ResourceDictionary x:Class="CrateManager.Styles.Styles1"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="using:CrateManager.Styles/Styles1"
                    xmlns:viewModels="clr-namespace:CrateManager.ViewModels" 
                    xmlns:views="clr-namespace:CrateManager.Views" 
                    >
   
    
    <!-- 
    Color Pallet 1 Blues
    
    Dark to Light
    #0010D
    #012326
    #011C40
    #024059
    #03738C
    -->

    <!-- GLOBAL STYLES -->

    <!-- Global ListView GridView Column Style -->

    <Style TargetType ="{x:Type Window}">
        <Setter Property="Background" Value= "#00010D"/>
    </Style>
    
    
    <Style TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <TextBlock Text="{TemplateBinding Content}" Padding="5" 
                     Width="{TemplateBinding Width}" TextAlignment="Left" Foreground="WhiteSmoke"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    
    
    
    
    <!-- UNIQUE STYLES -->
    
    <!-- Data Templates -->

    <DataTemplate DataType="{x:Type viewModels:CrateViewModel}">
        <views:CrateView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModels:NewCrateViewModel}">
        <views:NewCrateView/>
    </DataTemplate>



    <!-- ListView Item Template -->
    
    <DataTemplate x:Key="CustomTemplate">
        <Grid VerticalAlignment="Stretch"
                        HorizontalAlignment="Stretch"
                        >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <TextBlock Text="{Binding Path=Name}"
                       HorizontalAlignment="Center"
                       Grid.Column="0"
                       />

            <TextBlock Text="{Binding Path=Quantity}"
                       HorizontalAlignment="Center"
                       Grid.Column="1"
                       />

        </Grid>
    </DataTemplate>


    
    <!-- ListView Item Style -->

    <Style x:Key="ListViewItemStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="WhiteSmoke"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="WhiteSmoke"/>
                <Setter Property="Foreground" Value="Black"/>
            
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="WhiteSmoke"/>
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Mane Menu Button -->

    <Style x:Key="MainMenuButton" 
           BasedOn="{StaticResource {x:Type ToggleButton}}" 
           TargetType="{x:Type RadioButton}">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Grid VerticalAlignment="Stretch"
                              HorizontalAlignment="Stretch"
                              Background="{TemplateBinding Property=Background}">

                            <TextBlock Text="{TemplateBinding Property=Content}"
                                       VerticalAlignment="Center"
                                       Margin="30,0,0,0"
                                       />
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" Value="#444444"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#555555"/>
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            

        </Style.Setters>

    </Style>

    <!-- Crate Button -->
    
    <Style x:Key="CrateButton"
           BasedOn="{StaticResource {x:Type Button}}"
           TargetType="{x:Type Button}"
           >
        <Style.Setters>
            
            <Setter Property="MinHeight" Value="200"/>
            <Setter Property="MinWidth" Value="300"/>
            <Setter Property="Height" Value="200"/>
            <Setter Property="Width" Value="300"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Background" Value="#03738C"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        
                        <ControlTemplate.Resources>
                            <Style TargetType="TextBlock">
                                <Setter Property="Foreground" Value="White"/>
                            </Style>
                        </ControlTemplate.Resources>

                        <StackPanel Background="{TemplateBinding Property=Background}">
                            <TextBlock Text="{Binding CrateName}" FontSize="20" Margin="5"/>
                            <TextBlock Text="{Binding Category}" FontSize="16" Margin="5"/>
                        </StackPanel>

                        <!-- #00bce6 -->

                    </ControlTemplate>
                    
                </Setter.Value>
            </Setter>
        </Style.Setters>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#00bce6"/>
            </Trigger>
        </Style.Triggers>

    </Style>
</ResourceDictionary>
